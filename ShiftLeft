    
module ShiftLeft (entrada, shift, FlagIn, Cout, salida,Zero,Over,Neg);

parameter N=4;
input  [N-1:0] entrada;
input  [N-1:0] shift;
input FlagIn;
output  Cout;
output  reg[N-1:0] salida;
output Zero;
output Over;
output Neg;

reg zero;

wire s = shift;
//integer s = 2;
    always @(*) begin
     for (integer j=0; j<=N; j=j+1 )
     begin
            if(j<shift)
                salida[j] = FlagIn;
            else 
                salida[j] = entrada[j-shift];
        end
    end
      always @(salida)
               begin
                      if (salida == 0) begin
                          assign zero = 1;
                      end else begin
                          assign zero = 0;
                      end
                  
               end
    assign Zero = zero;
    assign Neg = 0;
    assign Over = 0;
    assign Cout = entrada[N-shift+1];
    endmodule
