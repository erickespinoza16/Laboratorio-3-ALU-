module Right (entrada, shift, FlagIn, Cout, salida,Zero,Over,Neg);//Se define el modulo

parameter N=4;// Parametro de generacion de Variable
input  [N-1:0] entrada;//Entrada parametrizable
input  [N-1:0] shift;//Salida parametrizable
input FlagIn;// Bandera de entrada(0-1)
output  Cout;//Muestra salida
output  reg[N-1:0] salida; //Guarda salida
output Zero;//Variable salida adicional
output Over;//Variable salida adicional
output Neg;//Variable salida adicional

reg zero;
wire s = shift;

    always @(*) begin
     for (integer j=0; j<=N; j=j+1 )//Ciclo encargado de la generacion del corrimiento
 
      
     begin
            
            if(j<shift)
                if (shift+j<N)
              
                    salida[j]= entrada[j+(shift)];
                    
                else 
                    salida[j] = FlagIn;
                    
                    
            else if(shift==0)
            begin 
                salida[j] = entrada[j];
                
            end 
            else if (shift==1)
            begin
                if (shift+j<N)
                          
                                salida[j]= entrada[j+(shift)];
                else 
                                salida[j] = FlagIn;
                
            end 
            else if(shift<j)
            begin
                salida[j] = FlagIn;
                
            end
        end
    end//Fin del ciclo
  always @(salida)
             begin
                    if (salida == 0) begin//Ciclo para activar Flags
                        assign zero = 1;
                    end else begin
                        assign zero = 0;
                    end
                
             end //Fin del ciclo
    assign Zero = zero;
    assign Neg = 0;
    assign Over = 0;
    assign Cout = entrada[N-shift+1];
endmodule//Fin del modulo
